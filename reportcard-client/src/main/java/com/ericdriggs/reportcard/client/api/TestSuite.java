/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ericdriggs.reportcard.client.api;

import java.util.Objects;
import com.ericdriggs.reportcard.client.api.TestCase;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * TestSuite
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-26T23:36:11.148-07:00")
public class TestSuite {
  @JsonProperty("error")
  private Integer error = null;

  @JsonProperty("failure")
  private Integer failure = null;

  @JsonProperty("group")
  private String group = null;

  @JsonProperty("hasSkip")
  private Boolean hasSkip = null;

  @JsonProperty("isSuccess")
  private Boolean isSuccess = null;

  @JsonProperty("package")
  private String _package = null;

  @JsonProperty("properties")
  private String properties = null;

  @JsonProperty("skipped")
  private Integer skipped = null;

  @JsonProperty("testCases")
  private List<TestCase> testCases = null;

  @JsonProperty("testResultFk")
  private Long testResultFk = null;

  @JsonProperty("testSuiteId")
  private Long testSuiteId = null;

  @JsonProperty("tests")
  private Integer tests = null;

  @JsonProperty("time")
  private BigDecimal time = null;

  public TestSuite error(Integer error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @ApiModelProperty(value = "")
  public Integer getError() {
    return error;
  }

  public void setError(Integer error) {
    this.error = error;
  }

  public TestSuite failure(Integer failure) {
    this.failure = failure;
    return this;
  }

   /**
   * Get failure
   * @return failure
  **/
  @ApiModelProperty(value = "")
  public Integer getFailure() {
    return failure;
  }

  public void setFailure(Integer failure) {
    this.failure = failure;
  }

  public TestSuite group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public TestSuite hasSkip(Boolean hasSkip) {
    this.hasSkip = hasSkip;
    return this;
  }

   /**
   * Get hasSkip
   * @return hasSkip
  **/
  @ApiModelProperty(value = "")
  public Boolean getHasSkip() {
    return hasSkip;
  }

  public void setHasSkip(Boolean hasSkip) {
    this.hasSkip = hasSkip;
  }

  public TestSuite isSuccess(Boolean isSuccess) {
    this.isSuccess = isSuccess;
    return this;
  }

   /**
   * Get isSuccess
   * @return isSuccess
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsSuccess() {
    return isSuccess;
  }

  public void setIsSuccess(Boolean isSuccess) {
    this.isSuccess = isSuccess;
  }

  public TestSuite _package(String _package) {
    this._package = _package;
    return this;
  }

   /**
   * Get _package
   * @return _package
  **/
  @ApiModelProperty(value = "")
  public String getPackage() {
    return _package;
  }

  public void setPackage(String _package) {
    this._package = _package;
  }

  public TestSuite properties(String properties) {
    this.properties = properties;
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public String getProperties() {
    return properties;
  }

  public void setProperties(String properties) {
    this.properties = properties;
  }

  public TestSuite skipped(Integer skipped) {
    this.skipped = skipped;
    return this;
  }

   /**
   * Get skipped
   * @return skipped
  **/
  @ApiModelProperty(value = "")
  public Integer getSkipped() {
    return skipped;
  }

  public void setSkipped(Integer skipped) {
    this.skipped = skipped;
  }

  public TestSuite testCases(List<TestCase> testCases) {
    this.testCases = testCases;
    return this;
  }

  public TestSuite addTestCasesItem(TestCase testCasesItem) {
    if (this.testCases == null) {
      this.testCases = new ArrayList<TestCase>();
    }
    this.testCases.add(testCasesItem);
    return this;
  }

   /**
   * Get testCases
   * @return testCases
  **/
  @ApiModelProperty(value = "")
  public List<TestCase> getTestCases() {
    return testCases;
  }

  public void setTestCases(List<TestCase> testCases) {
    this.testCases = testCases;
  }

  public TestSuite testResultFk(Long testResultFk) {
    this.testResultFk = testResultFk;
    return this;
  }

   /**
   * Get testResultFk
   * @return testResultFk
  **/
  @ApiModelProperty(value = "")
  public Long getTestResultFk() {
    return testResultFk;
  }

  public void setTestResultFk(Long testResultFk) {
    this.testResultFk = testResultFk;
  }

  public TestSuite testSuiteId(Long testSuiteId) {
    this.testSuiteId = testSuiteId;
    return this;
  }

   /**
   * Get testSuiteId
   * @return testSuiteId
  **/
  @ApiModelProperty(value = "")
  public Long getTestSuiteId() {
    return testSuiteId;
  }

  public void setTestSuiteId(Long testSuiteId) {
    this.testSuiteId = testSuiteId;
  }

  public TestSuite tests(Integer tests) {
    this.tests = tests;
    return this;
  }

   /**
   * Get tests
   * @return tests
  **/
  @ApiModelProperty(value = "")
  public Integer getTests() {
    return tests;
  }

  public void setTests(Integer tests) {
    this.tests = tests;
  }

  public TestSuite time(BigDecimal time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTime() {
    return time;
  }

  public void setTime(BigDecimal time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestSuite testSuite = (TestSuite) o;
    return Objects.equals(this.error, testSuite.error) &&
        Objects.equals(this.failure, testSuite.failure) &&
        Objects.equals(this.group, testSuite.group) &&
        Objects.equals(this.hasSkip, testSuite.hasSkip) &&
        Objects.equals(this.isSuccess, testSuite.isSuccess) &&
        Objects.equals(this._package, testSuite._package) &&
        Objects.equals(this.properties, testSuite.properties) &&
        Objects.equals(this.skipped, testSuite.skipped) &&
        Objects.equals(this.testCases, testSuite.testCases) &&
        Objects.equals(this.testResultFk, testSuite.testResultFk) &&
        Objects.equals(this.testSuiteId, testSuite.testSuiteId) &&
        Objects.equals(this.tests, testSuite.tests) &&
        Objects.equals(this.time, testSuite.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(error, failure, group, hasSkip, isSuccess, _package, properties, skipped, testCases, testResultFk, testSuiteId, tests, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestSuite {\n");
    
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    failure: ").append(toIndentedString(failure)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    hasSkip: ").append(toIndentedString(hasSkip)).append("\n");
    sb.append("    isSuccess: ").append(toIndentedString(isSuccess)).append("\n");
    sb.append("    _package: ").append(toIndentedString(_package)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    skipped: ").append(toIndentedString(skipped)).append("\n");
    sb.append("    testCases: ").append(toIndentedString(testCases)).append("\n");
    sb.append("    testResultFk: ").append(toIndentedString(testResultFk)).append("\n");
    sb.append("    testSuiteId: ").append(toIndentedString(testSuiteId)).append("\n");
    sb.append("    tests: ").append(toIndentedString(tests)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

