/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.ericdriggs.reportcard.client.api;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * TestCase
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-09-26T23:36:11.148-07:00")
public class TestCase {
  @JsonProperty("className")
  private String className = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("testCaseId")
  private Long testCaseId = null;

  /**
   * Gets or Sets testStatus
   */
  public enum TestStatusEnum {
    SUCCESS("SUCCESS"),
    
    SKIPPED("SKIPPED"),
    
    FAILURE("FAILURE"),
    
    ERROR("ERROR"),
    
    FLAKY_FAILURE("FLAKY_FAILURE"),
    
    RERUN_FAILURE("RERUN_FAILURE"),
    
    FLAKY_ERROR("FLAKY_ERROR"),
    
    RERUN_ERROR("RERUN_ERROR");

    private String value;

    TestStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TestStatusEnum fromValue(String text) {
      for (TestStatusEnum b : TestStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("testStatus")
  private TestStatusEnum testStatus = null;

  @JsonProperty("testStatusFk")
  private Integer testStatusFk = null;

  @JsonProperty("testSuiteFk")
  private Long testSuiteFk = null;

  @JsonProperty("time")
  private BigDecimal time = null;

  public TestCase className(String className) {
    this.className = className;
    return this;
  }

   /**
   * Get className
   * @return className
  **/
  @ApiModelProperty(value = "")
  public String getClassName() {
    return className;
  }

  public void setClassName(String className) {
    this.className = className;
  }

  public TestCase name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestCase testCaseId(Long testCaseId) {
    this.testCaseId = testCaseId;
    return this;
  }

   /**
   * Get testCaseId
   * @return testCaseId
  **/
  @ApiModelProperty(value = "")
  public Long getTestCaseId() {
    return testCaseId;
  }

  public void setTestCaseId(Long testCaseId) {
    this.testCaseId = testCaseId;
  }

  public TestCase testStatus(TestStatusEnum testStatus) {
    this.testStatus = testStatus;
    return this;
  }

   /**
   * Get testStatus
   * @return testStatus
  **/
  @ApiModelProperty(value = "")
  public TestStatusEnum getTestStatus() {
    return testStatus;
  }

  public void setTestStatus(TestStatusEnum testStatus) {
    this.testStatus = testStatus;
  }

  public TestCase testStatusFk(Integer testStatusFk) {
    this.testStatusFk = testStatusFk;
    return this;
  }

   /**
   * Get testStatusFk
   * minimum: -128
   * maximum: 127
   * @return testStatusFk
  **/
  @ApiModelProperty(value = "")
  public Integer getTestStatusFk() {
    return testStatusFk;
  }

  public void setTestStatusFk(Integer testStatusFk) {
    this.testStatusFk = testStatusFk;
  }

  public TestCase testSuiteFk(Long testSuiteFk) {
    this.testSuiteFk = testSuiteFk;
    return this;
  }

   /**
   * Get testSuiteFk
   * @return testSuiteFk
  **/
  @ApiModelProperty(value = "")
  public Long getTestSuiteFk() {
    return testSuiteFk;
  }

  public void setTestSuiteFk(Long testSuiteFk) {
    this.testSuiteFk = testSuiteFk;
  }

  public TestCase time(BigDecimal time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getTime() {
    return time;
  }

  public void setTime(BigDecimal time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestCase testCase = (TestCase) o;
    return Objects.equals(this.className, testCase.className) &&
        Objects.equals(this.name, testCase.name) &&
        Objects.equals(this.testCaseId, testCase.testCaseId) &&
        Objects.equals(this.testStatus, testCase.testStatus) &&
        Objects.equals(this.testStatusFk, testCase.testStatusFk) &&
        Objects.equals(this.testSuiteFk, testCase.testSuiteFk) &&
        Objects.equals(this.time, testCase.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(className, name, testCaseId, testStatus, testStatusFk, testSuiteFk, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestCase {\n");
    
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    testCaseId: ").append(toIndentedString(testCaseId)).append("\n");
    sb.append("    testStatus: ").append(toIndentedString(testStatus)).append("\n");
    sb.append("    testStatusFk: ").append(toIndentedString(testStatusFk)).append("\n");
    sb.append("    testSuiteFk: ").append(toIndentedString(testSuiteFk)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

