/*
 * This file is generated by jOOQ.
 */
package com.ericdriggs.reportcard.db.tables.daos;


import com.ericdriggs.reportcard.db.tables.TestSuite;
import com.ericdriggs.reportcard.db.tables.records.TestSuiteRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestSuiteDao extends DAOImpl<TestSuiteRecord, com.ericdriggs.reportcard.db.tables.pojos.TestSuite, Long> {

    /**
     * Create a new TestSuiteDao without any configuration
     */
    public TestSuiteDao() {
        super(TestSuite.TEST_SUITE, com.ericdriggs.reportcard.db.tables.pojos.TestSuite.class);
    }

    /**
     * Create a new TestSuiteDao with an attached configuration
     */
    public TestSuiteDao(Configuration configuration) {
        super(TestSuite.TEST_SUITE, com.ericdriggs.reportcard.db.tables.pojos.TestSuite.class, configuration);
    }

    @Override
    public Long getId(com.ericdriggs.reportcard.db.tables.pojos.TestSuite object) {
        return object.getTestSuiteId();
    }

    /**
     * Fetch records that have <code>test_suite_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfTestSuiteId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.TEST_SUITE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>test_suite_id IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByTestSuiteId(Long... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_SUITE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>test_suite_id = value</code>
     */
    public com.ericdriggs.reportcard.db.tables.pojos.TestSuite fetchOneByTestSuiteId(Long value) {
        return fetchOne(TestSuite.TEST_SUITE.TEST_SUITE_ID, value);
    }

    /**
     * Fetch records that have <code>test_result_fk BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfTestResultFk(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.TEST_RESULT_FK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>test_result_fk IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByTestResultFk(Long... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_RESULT_FK, values);
    }

    /**
     * Fetch records that have <code>test_suite_package BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfTestSuitePackage(String lowerInclusive, String upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.TEST_SUITE_PACKAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>test_suite_package IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByTestSuitePackage(String... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_SUITE_PACKAGE, values);
    }

    /**
     * Fetch records that have <code>tests BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfTests(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.TESTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tests IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByTests(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.TESTS, values);
    }

    /**
     * Fetch records that have <code>skipped BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfSkipped(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.SKIPPED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>skipped IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchBySkipped(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.SKIPPED, values);
    }

    /**
     * Fetch records that have <code>error BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfError(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.ERROR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>error IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByError(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.ERROR, values);
    }

    /**
     * Fetch records that have <code>failure BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfFailure(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.FAILURE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>failure IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByFailure(Integer... values) {
        return fetch(TestSuite.TEST_SUITE.FAILURE, values);
    }

    /**
     * Fetch records that have <code>test_suite_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfTestSuiteTime(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.TEST_SUITE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>test_suite_time IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByTestSuiteTime(Long... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_SUITE_TIME, values);
    }

    /**
     * Fetch records that have <code>test_suite_is_success BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfTestSuiteIsSuccess(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.TEST_SUITE_IS_SUCCESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>test_suite_is_success IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByTestSuiteIsSuccess(Byte... values) {
        return fetch(TestSuite.TEST_SUITE.TEST_SUITE_IS_SUCCESS, values);
    }

    /**
     * Fetch records that have <code>has_skip BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchRangeOfHasSkip(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(TestSuite.TEST_SUITE.HAS_SKIP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>has_skip IN (values)</code>
     */
    public List<com.ericdriggs.reportcard.db.tables.pojos.TestSuite> fetchByHasSkip(Byte... values) {
        return fetch(TestSuite.TEST_SUITE.HAS_SKIP, values);
    }
}
