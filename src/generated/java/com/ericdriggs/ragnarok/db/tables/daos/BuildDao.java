/*
 * This file is generated by jOOQ.
 */
package com.ericdriggs.ragnarok.db.tables.daos;


import com.ericdriggs.ragnarok.db.tables.Build;
import com.ericdriggs.ragnarok.db.tables.records.BuildRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BuildDao extends DAOImpl<BuildRecord, com.ericdriggs.ragnarok.db.tables.pojos.Build, ULong> {

    /**
     * Create a new BuildDao without any configuration
     */
    public BuildDao() {
        super(Build.BUILD, com.ericdriggs.ragnarok.db.tables.pojos.Build.class);
    }

    /**
     * Create a new BuildDao with an attached configuration
     */
    public BuildDao(Configuration configuration) {
        super(Build.BUILD, com.ericdriggs.ragnarok.db.tables.pojos.Build.class, configuration);
    }

    @Override
    public ULong getId(com.ericdriggs.ragnarok.db.tables.pojos.Build object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(Build.BUILD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchById(ULong... values) {
        return fetch(Build.BUILD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ericdriggs.ragnarok.db.tables.pojos.Build fetchOneById(ULong value) {
        return fetchOne(Build.BUILD.ID, value);
    }

    /**
     * Fetch records that have <code>app_fk BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchRangeOfAppFk(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Build.BUILD.APP_FK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_fk IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchByAppFk(UInteger... values) {
        return fetch(Build.BUILD.APP_FK, values);
    }

    /**
     * Fetch records that have <code>created BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchRangeOfCreated(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Build.BUILD.CREATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchByCreated(LocalDateTime... values) {
        return fetch(Build.BUILD.CREATED, values);
    }

    /**
     * Fetch records that have <code>app_build_ordinal BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchRangeOfAppBuildOrdinal(UInteger lowerInclusive, UInteger upperInclusive) {
        return fetchRange(Build.BUILD.APP_BUILD_ORDINAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_build_ordinal IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Build> fetchByAppBuildOrdinal(UInteger... values) {
        return fetch(Build.BUILD.APP_BUILD_ORDINAL, values);
    }
}
