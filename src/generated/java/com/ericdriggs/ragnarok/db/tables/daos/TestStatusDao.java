/*
 * This file is generated by jOOQ.
 */
package com.ericdriggs.ragnarok.db.tables.daos;


import com.ericdriggs.ragnarok.db.tables.TestStatus;
import com.ericdriggs.ragnarok.db.tables.records.TestStatusRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestStatusDao extends DAOImpl<TestStatusRecord, com.ericdriggs.ragnarok.db.tables.pojos.TestStatus, Byte> {

    /**
     * Create a new TestStatusDao without any configuration
     */
    public TestStatusDao() {
        super(TestStatus.TEST_STATUS, com.ericdriggs.ragnarok.db.tables.pojos.TestStatus.class);
    }

    /**
     * Create a new TestStatusDao with an attached configuration
     */
    public TestStatusDao(Configuration configuration) {
        super(TestStatus.TEST_STATUS, com.ericdriggs.ragnarok.db.tables.pojos.TestStatus.class, configuration);
    }

    @Override
    public Byte getId(com.ericdriggs.ragnarok.db.tables.pojos.TestStatus object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.TestStatus> fetchRangeOfId(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(TestStatus.TEST_STATUS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.TestStatus> fetchById(Byte... values) {
        return fetch(TestStatus.TEST_STATUS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ericdriggs.ragnarok.db.tables.pojos.TestStatus fetchOneById(Byte value) {
        return fetchOne(TestStatus.TEST_STATUS.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.TestStatus> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TestStatus.TEST_STATUS.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.TestStatus> fetchByName(String... values) {
        return fetch(TestStatus.TEST_STATUS.NAME, values);
    }
}
