/*
 * This file is generated by jOOQ.
 */
package com.ericdriggs.ragnarok.db.tables.daos;


import com.ericdriggs.ragnarok.db.tables.Stage;
import com.ericdriggs.ragnarok.db.tables.records.StageRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StageDao extends DAOImpl<StageRecord, com.ericdriggs.ragnarok.db.tables.pojos.Stage, Integer> {

    /**
     * Create a new StageDao without any configuration
     */
    public StageDao() {
        super(Stage.STAGE, com.ericdriggs.ragnarok.db.tables.pojos.Stage.class);
    }

    /**
     * Create a new StageDao with an attached configuration
     */
    public StageDao(Configuration configuration) {
        super(Stage.STAGE, com.ericdriggs.ragnarok.db.tables.pojos.Stage.class, configuration);
    }

    @Override
    public Integer getId(com.ericdriggs.ragnarok.db.tables.pojos.Stage object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Stage> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Stage.STAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Stage> fetchById(Integer... values) {
        return fetch(Stage.STAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.ericdriggs.ragnarok.db.tables.pojos.Stage fetchOneById(Integer value) {
        return fetchOne(Stage.STAGE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Stage> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Stage.STAGE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Stage> fetchByName(String... values) {
        return fetch(Stage.STAGE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.ericdriggs.ragnarok.db.tables.pojos.Stage fetchOneByName(String value) {
        return fetchOne(Stage.STAGE.NAME, value);
    }

    /**
     * Fetch records that have <code>app_fk BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Stage> fetchRangeOfAppFk(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Stage.STAGE.APP_FK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_fk IN (values)</code>
     */
    public List<com.ericdriggs.ragnarok.db.tables.pojos.Stage> fetchByAppFk(Integer... values) {
        return fetch(Stage.STAGE.APP_FK, values);
    }
}
