buildscript {
    ext {
        okHttpVersion = '4.7.2'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'java'
	id 'idea'
    id 'jacoco'
}

jacocoTestReport {

    executionData { tasks.withType(Test).findAll { it.jacoco.destinationFile.exists() }*.jacoco.destinationFile }
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}


dependencies {
    compile 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'

    compile "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

}

test {
	systemProperties System.properties
	outputs.upToDateWhen { false }
	useJUnitPlatform()
}

// If on JDK 9+, verify project cross-compiles on its 'sourceCompatible' JVM version (see https://github.com/melix/mrjar-gradle/blob/master/jdks.gradle)
if (project.hasProperty('crossCompile')) {
    if (JavaVersion.current().java9Compatible) {
        project.afterEvaluate {
            tasks.withType(JavaCompile) {
                def version = compat(sourceCompatibility)
                project.logger.info("Configuring $name to use --release $version")
                options.compilerArgs.addAll(['--release', version])
            }
        }
    } else {
        project.logger.warn("-PcrossCompile not supported prior to JDK 9; using JDK ${JavaVersion.current()}")
    }
}

// This function converts 1.8 -> 8
static String compat(String src) {
    if (src.contains('.')) {
        src.substring(src.lastIndexOf('.')+1)
    } else {
        src
    }
}